[tox]
envlist = py35,py27,pep8
minversion = 2.3.2
skipsdist = True

[testenv]
usedevelop = True
install_command = pip install -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/stein} -U {opts} {packages}
setenv = VIRTUAL_ENV={envdir}
         NOSE_WITH_COVERAGE=1
         NOSE_COVER_BRANCHES=1
deps =
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/test-requirements.txt
commands = find . -type f -name "*.py[c|o]" -delete
           find . -type d -name "__pycache__" -delete
           nosetests {posargs:test/unit}
whitelist_externals = find
                      rm
passenv = SWIFT_* *_proxy

[testenv:cover]
setenv = VIRTUAL_ENV={envdir}
         NOSE_WITH_COVERAGE=1
         NOSE_COVER_BRANCHES=1
         NOSE_COVER_HTML=1
         NOSE_COVER_HTML_DIR={toxinidir}/cover

# Since the practice demonstrated that developers keep adding py2-specific
# code inadvertedly, we instituted a practice of "py3 ratchet": we convert
# tests file by file, add them into the list below, and never go back.
# This list also serves as a shared task board for those helping with py3.
# But mind that reviews expanding this list may be outstanding in Gerrit.
[testenv:py35]
commands =
  nosetests {posargs:\
      test/unit/account \
      test/unit/cli \
      test/unit/common/middleware/crypto \
      test/unit/common/middleware/test_account_quotas.py \
      test/unit/common/middleware/test_acl.py \
      test/unit/common/middleware/test_catch_errors.py \
      test/unit/common/middleware/test_cname_lookup.py \
      test/unit/common/middleware/test_container_sync.py \
      test/unit/common/middleware/test_copy.py \
      test/unit/common/middleware/test_crossdomain.py \
      test/unit/common/middleware/test_domain_remap.py \
      test/unit/common/middleware/test_formpost.py \
      test/unit/common/middleware/test_gatekeeper.py \
      test/unit/common/middleware/test_healthcheck.py \
      test/unit/common/middleware/test_keystoneauth.py \
      test/unit/common/middleware/test_list_endpoints.py \
      test/unit/common/middleware/test_listing_formats.py \
      test/unit/common/middleware/test_memcache.py \
      test/unit/common/middleware/test_name_check.py \
      test/unit/common/middleware/test_proxy_logging.py \
      test/unit/common/middleware/test_quotas.py \
      test/unit/common/middleware/test_ratelimit.py \
      test/unit/common/middleware/test_read_only.py \
      test/unit/common/middleware/test_recon.py \
      test/unit/common/middleware/test_subrequest_logging.py \
      test/unit/common/middleware/test_tempauth.py \
      test/unit/common/middleware/test_versioned_writes.py \
      test/unit/common/middleware/test_xprofile.py \
      test/unit/common/ring \
      test/unit/common/test_base_storage_server.py \
      test/unit/common/test_bufferedhttp.py \
      test/unit/common/test_constraints.py \
      test/unit/common/test_container_sync_realms.py \
      test/unit/common/test_daemon.py \
      test/unit/common/test_db.py \
      test/unit/common/test_db_replicator.py \
      test/unit/common/test_direct_client.py \
      test/unit/common/test_exceptions.py \
      test/unit/common/test_header_key_dict.py \
      test/unit/common/test_internal_client.py \
      test/unit/common/test_linkat.py \
      test/unit/common/test_manager.py \
      test/unit/common/test_memcached.py \
      test/unit/common/test_request_helpers.py \
      test/unit/common/test_splice.py \
      test/unit/common/test_storage_policy.py \
      test/unit/common/test_swob.py \
      test/unit/common/test_utils.py \
      test/unit/common/test_wsgi.py \
      test/unit/container \
      test/unit/obj/test_auditor.py \
      test/unit/obj/test_replicator.py \
      test/unit/obj/test_server.py \
      test/unit/obj/test_updater.py \
      test/unit/proxy/controllers/test_account.py \
      test/unit/proxy/controllers/test_base.py \
      test/unit/proxy/controllers/test_container.py \
      test/unit/proxy/controllers/test_info.py \
      test/unit/proxy/controllers/test_obj.py}

[testenv:py36]
commands = {[testenv:py35]commands}

[testenv:py37]
commands = {[testenv:py35]commands}

[testenv:pep8]
basepython = python2.7
commands =
  flake8 {posargs:swift test doc setup.py}
  flake8 --filename=swift* bin
  bandit -c bandit.yaml -r swift -n 5
  ./.manpages {posargs}

[testenv:py3pep8]
basepython = python3
install_command = echo {packages}
whitelist_externals = echo
commands =
  # Gross hack. There's no other way to get it to /not/ install swift itself
  # (which triggers installing eventlet) but also get flake8 installed.
  pip install flake8
  flake8 swift test doc setup.py
  flake8 --filename=swift* bin
  python ./setup.py check --restructuredtext --strict
  ./.manpages {posargs}

[testenv:func]
basepython = python2.7
commands = ./.functests {posargs}

[testenv:func-encryption]
commands = ./.functests {posargs}
setenv = SWIFT_TEST_IN_PROCESS=1
         SWIFT_TEST_IN_PROCESS_CONF_LOADER=encryption

[testenv:func-domain-remap-staticweb]
commands = ./.functests {posargs}
setenv = SWIFT_TEST_IN_PROCESS=1
         SWIFT_TEST_IN_PROCESS_CONF_LOADER=domain_remap_staticweb

[testenv:func-ec]
commands = ./.functests {posargs}
setenv = SWIFT_TEST_IN_PROCESS=1
         SWIFT_TEST_IN_PROCESS_CONF_LOADER=ec

[testenv:func-s3api]
commands = ./.functests {posargs}
setenv = SWIFT_TEST_IN_PROCESS=1
         SWIFT_TEST_IN_PROCESS_CONF_LOADER=s3api

[testenv:venv]
commands = {posargs}

[testenv:docs]
basepython = python2.7
deps = -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -W -b html doc/source doc/build/html

[testenv:api-ref]
# This environment is called from CI scripts to test and publish
# the API Ref to developer.openstack.org.
basepython = python2.7
deps = -r{toxinidir}/doc/requirements.txt
commands =
  rm -rf api-ref/build
  sphinx-build -W -b html -d api-ref/build/doctrees api-ref/source api-ref/build/html

[testenv:bandit]
deps = -r{toxinidir}/test-requirements.txt
commands = bandit -c bandit.yaml -r swift -n 5

[flake8]
# it's not a bug that we aren't using all of hacking, ignore:
# H101: Use TODO(NAME)
# H202: assertRaises Exception too broad
# H301: one import per line
# H306: imports not in alphabetical order (time, os)
# H404: multi line docstring should start without a leading new line
# H405: multi line docstring summary not separated with an empty line
# H501: Do not use self.__dict__ for string formatting
ignore = H101,H202,H301,H306,H404,H405,H501
exclude = .venv,.tox,dist,*egg
filename = *.py,bin/*
show-source = True

[testenv:bindep]
# Do not install any requirements. We want this to be fast and work even if
# system dependencies are missing, since it's used to tell you what system
# dependencies are missing! This also means that bindep must be installed
# separately, outside of the requirements files.
skip_install = True
deps = bindep
commands = bindep test

[testenv:releasenotes]
deps = -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -a -W -E -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:lower-constraints]
# FIXME(dhellmann): We'll want to uncomment this
# when the full test suite works with python 3.
# basepython = python3
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
